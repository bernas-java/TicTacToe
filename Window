package com.main;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

public class Window extends JFrame implements ActionListener {

    // Definiowanie przycisków
    JButton b1,b2,b3,b4,b5,b6,b7,b8,b9,bRestart,bBotOn;
    JLabel LWin,LTurn;

    // Definiowanie zmiennych
    int EmptySpaces;
    boolean Xturn = true;
    boolean FirstTurn = true;
    boolean SmbdWon = false;
    boolean BotOn = false;

    // Definiowanie Array
    String[][] CorX = { {"","",""}, {"","",""}, {"","",""} };
    //    [ ] [ ] [ ]
    //    [ ] [ ] [ ]
    //    [ ] [ ] [ ]

    public Window() {

        // Ustawienia okna
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(600,676);
        setTitle("TicTacToe v1.5");
        setVisible(true);
        setResizable(false);
        setLayout(null);

        // Tworzenie przycisków
        b1 = new JButton("");
        b2 = new JButton("");
        b3 = new JButton("");
        b4 = new JButton("");
        b5 = new JButton("");
        b6 = new JButton("");
        b7 = new JButton("");
        b8 = new JButton("");
        b9 = new JButton("");
        bRestart = new JButton("Restart");
        bBotOn = new JButton("Bot is Off");
        LWin = new JLabel("");
        LTurn = new JLabel("Gracz X");

        // Pozycja przycisków
        b1.setBounds(0,0,200,200);
        b2.setBounds(200,0,200,200);
        b3.setBounds(400,0,200,200);
        b4.setBounds(0,200,200,200);
        b5.setBounds(200,200,200,200);
        b6.setBounds(400,200,200,200);
        b7.setBounds(0,400,200,200);
        b8.setBounds(200,400,200,200);
        b9.setBounds(400,400,200,200);
        bRestart.setBounds(400,600,199,48);
        LWin.setBounds(200,600,400,50);
        LTurn.setBounds(255,597,200,50);
        bBotOn.setBounds(0,600,200,50);

        // Czcionka w przyciskach
        b1.setFont(new Font("Verdana",Font.BOLD,100));
        b2.setFont(new Font("Verdana",Font.BOLD,100));
        b3.setFont(new Font("Verdana",Font.BOLD,100));
        b4.setFont(new Font("Verdana",Font.BOLD,100));
        b5.setFont(new Font("Verdana",Font.BOLD,100));
        b6.setFont(new Font("Verdana",Font.BOLD,100));
        b7.setFont(new Font("Verdana",Font.BOLD,100));
        b8.setFont(new Font("Verdana",Font.BOLD,100));
        b9.setFont(new Font("Verdana",Font.BOLD,100));
        bRestart.setFont(new Font("Verdana",Font.BOLD,20));
        bBotOn.setFont(new Font("Verdana",Font.BOLD,20));
        LWin.setFont(new Font("Verdana",Font.BOLD,19));
        LTurn.setFont(new Font("Verdana",Font.BOLD,19));
        LTurn.setForeground(Color.red);

        // Podpięcie przycisków do zdarzeń

        b1.addActionListener(this);
        b2.addActionListener(this);
        b3.addActionListener(this);
        b4.addActionListener(this);
        b5.addActionListener(this);
        b6.addActionListener(this);
        b7.addActionListener(this);
        b8.addActionListener(this);
        b9.addActionListener(this);
        bRestart.addActionListener(this);
        bBotOn.addActionListener(this);

        // Dodanie przycisków do okna
        add(b1);
        add(b2);
        add(b3);
        add(b4);
        add(b5);
        add(b6);
        add(b7);
        add(b8);
        add(b9);
        add(LWin);
        add(LTurn);
        add(bRestart);
        add(bBotOn);

    }

    // Działanie przycisków
    @Override
    public void actionPerformed(ActionEvent e) {

        // Obiekt, który pobiera nazwę przycisku
        Object source = e.getSource();
        // Rozróżnienie przycisków
        KeyPressed(source);


//        CHECK-CONSOLE

        if (SmbdWon) {
            for (int i = 0; i < 3; i++) {
                for (int n = 0; n < 3; n++) {
                    System.out.print(CorX[i][n]);
                }
                System.out.println();
            }
            System.out.println();
            System.out.println();
        }

    }

    private void KeyPressed(Object source) {
        String mark = "";

        // Rozróżnienie przycisków
        if (!SmbdWon) {
            if (source == b1) {
                mark = InsertCol(0, 0);
            }
            if (source == b2) {
                mark = InsertCol(0, 1);
            }
            if (source == b3) {
                mark = InsertCol(0, 2);
            }
            if (source == b4) {
                mark = InsertCol(1, 0);
            }
            if (source == b5) {
                mark = InsertCol(1, 1);
            }
            if (source == b6) {
                mark = InsertCol(1, 2);
            }
            if (source == b7) {
                mark = InsertCol(2, 0);
            }
            if (source == b8) {
                mark = InsertCol(2, 1);
            }
            if (source == b9) {
                mark = InsertCol(2, 2);
            }
        }
        if (source == bRestart) {
            Restart();
        }
        if (source == bBotOn) {
            if (BotOn) {
                BotOn = false;
                bBotOn.setText("Bot is Off");
            }
            else {
                BotOn = true;
                bBotOn.setText("Bot is On");
            }
        }

        if (!SmbdWon) {
            CheckIfDraw();
            CheckIfWin(mark);
        }
        UpdateButtons();
        if (BotOn && !SmbdWon) {
            BotPlay();
        }
    }

    private String InsertCol(int tr, int td) {
        String mark;
        if (CorX[tr][td].equals("")) {
            if (Xturn) {
                mark = "X";
                CorX[tr][td] = mark;
                Xturn = false;
                LTurn.setText("Gracz O");
            }
            else {
                mark = "O";
                CorX[tr][td] = mark;
                Xturn = true;
                LTurn.setText("Gracz X");

            }
        }
        else {
            mark = CorX[tr][td];
        }
        return mark;

    }

    private void CheckIfWin(String mark) {
        for(int i=0;i<3;i++) {
            if (!CorX[i][0].equals("") && !CorX[i][1].equals("") && !CorX[i][2].equals("")) {
                if (CorX[i][0].equals(CorX[i][1]) && CorX[i][0].equals(CorX[i][2])) {
                    Wins(mark);
                }
            }
            if (!CorX[0][i].equals("") && !CorX[1][i].equals("") && !CorX[2][i].equals("")) {
                if (CorX[0][i].equals(CorX[1][i]) && CorX[0][i].equals(CorX[2][i])) {
                    Wins(mark);
                }
            }
            if (i<2 && !CorX[0][2*i].equals("") && !CorX[1][1].equals("") && !CorX[2][2-2*i].equals("")) {
                if (CorX[0][2*i].equals(CorX[1][1]) && CorX[1][1].equals(CorX[2][2-2*i])) {
                    Wins(mark);
                }
            }
        }
    }

    private void Wins(String player) {

        SmbdWon = true;
        if (!player.equals("")) {
            LWin.setText("Wygrywa gracz " + player+"!");
        }
        else {
            LWin.setText("Remis!");
        }
        LTurn.setText("");

    }

    private void Restart() {

        // Czyszczenie zmiennych, oraz ukrywanie/pokazywanie GUI
        for(int n=0;n<3;n++) {
            for(int i=0;i<3;i++) {
                CorX[n][i] = "";
            }
        }
        //    [ ] [ ] [ ]
        //    [ ] [ ] [ ]
        //    [ ] [ ] [ ]
        b1.setText("");
        b2.setText("");
        b3.setText("");
        b4.setText("");
        b5.setText("");
        b6.setText("");
        b7.setText("");
        b8.setText("");
        b9.setText("");
        LWin.setText("");
        LTurn.setText("Gracz X");

        Xturn = true;
        FirstTurn = true;
        SmbdWon = false;

    }

    private void CheckIfDraw() {

        EmptySpaces = 0;
        for(int n=0;n<3;n++) {
            for(int i=0;i<3;i++) {
                if (!CorX[n][i].equals("")) {
                    EmptySpaces++;
                }
            }
        }
        if (!FirstTurn && EmptySpaces == 9) {
            Wins("");
        }
        FirstTurn = false;
    }

    private void BotPlay() {

        String mark;
        Random random = new Random();

        int tr = random.nextInt(3);
        int td = random.nextInt(3);
        if (CorX[tr][td].equals("")) {
            mark = InsertCol(tr,td);
            CheckIfDraw();
            CheckIfWin(mark);
            UpdateButtons();
        }
        else {
            BotPlay();
        }

    }

    private void UpdateButtons() {

        b1.setText(CorX[0][0]);
        b2.setText(CorX[0][1]);
        b3.setText(CorX[0][2]);
        b4.setText(CorX[1][0]);
        b5.setText(CorX[1][1]);
        b6.setText(CorX[1][2]);
        b7.setText(CorX[2][0]);
        b8.setText(CorX[2][1]);
        b9.setText(CorX[2][2]);

    }

}
